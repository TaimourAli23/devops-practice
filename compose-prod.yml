services:
  postgresdb:
    image: postgres:16.3
    networks:
      - todo-network
    ports:
      - 5434:5432
    environment:
      - POSTGRES_PASSWORD=postgres
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
  todo-app-backend:
    container_name: todo-app-production
    depends_on:
    - postgresdb
    build:
      context: todo_project
      dockerfile: Dockerfile
    image: todo-app
    networks:
      - todo-network
    volumes:
      - application-logs:/var/log/todo_project
#    ports:
#      - 8000:8000
    environment:
      - DB_NAME=postgres
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=postgresdb
      - DB_PORT=5432
    command: uwsgi --module todo_project.wsgi --uid 100001 --master --processes 4 --threads 2 --socket 0.0.0.0:8000 --vacuum --logto /var/log/todo_project/uwsgi.log
  nginx:
    depends_on:
      - todo-app-backend
    build:
      context: todo_project/nginx
      dockerfile: Dockerfile
    networks:
      - todo-network
    image: nginx
    ports:
      - 8080:80
  todo-app-frontend:
    container_name: todo_app_frontend
    build:
      context: frontend/todo_app
      dockerfile: Dockerfile
    networks:
      - todo-network
    ports:
      - 3000:3000
    command: npm run dev
networks:
  todo-network:
    driver: bridge
volumes:
  db-data:
    driver: local
  application-logs:
    driver: local
